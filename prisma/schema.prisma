generator client {
  provider      = "prisma-client-js"
  // Let Prisma pick native at build time, or pin exactly:
  // binaryTargets = ["debian-openssl-3.0.x"]
  binaryTargets = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model SorobanEvent {
  id             BigInt     @id @default(autoincrement())
  txHash         String
  contractId     String
  ledger         Int
  topicSignature String
  topics         Json
  data           Json?
  createdAt      DateTime   @default(now())
  network        String

  @@index([ledger], map: "idx_events_ledger")
  @@index([contractId], map: "idx_events_contract")
  @@index([topicSignature], map: "idx_events_signature")
}

model teamFinanceTokens {
  id            String  @id
  network       String
  blockHeight   Int
  sequence      Int
  address       String
  timestamp     BigInt
  txHash        String
  contractId    String
  
  owner         String
  name          String
  symbol        String
  totalSupply   String
  decimals      Int
  ipfs          String
  createdAt     DateTime @default(now())

  envelopeXdr   String

  @@index([address], map: "idx_token_mint_contract")
}

model DepositDetail {
  id                        String  @id
  network                   String
  tokenAddress              String
  withdrawalAddress         String
  tokenAmount               BigInt
  unlockTime                BigInt
  withdrawn                 Boolean
  tokenId                   BigInt
  isNFT                     Boolean
  migratedLockDepositId     BigInt
  isNFTMinted               Boolean

}

model deposits {
  id                        String  @id
  network                   String
  blockHeight               Int
  sequence                  Int
  lockContractAddress       String
  depositId                 String
  tokenAddress              String
  withdrawalAddress         String
  amount                    String
  unlockTime                BigInt
  txHash                    String
  timestamp                 BigInt
  senderAddress             String

  token_owner               String?
  token_name                String
  token_symbol              String
  token_totalSupply         String
  token_decimals            Int
  token_ipfs                String?

  deposit_withdrawn         Boolean
  deposit_tokenId           BigInt
  deposit_isNFT             Boolean
  deposit_migratedLockDepositId     BigInt
  deposit_isNFTMinted               Boolean

  createdAt                 DateTime @default(now())

  @@index([depositId], map: "deposit_idx_lock_contract")
}

model token {
  id            String  @id
  network       String
  address       String  
  owner         String
  name          String
  symbol        String
  totalSupply   String
  decimals      Int
  ipfs          String
  createdAt     DateTime @default(now())
}

model stakingPools {
  id                              String  @id
  network                         String
  blockHeight                     Int
  sequence                        Int
  stakingContract                 String
  timestamp                       BigInt
  txHash                          String
  contractId                      String

  stakingToken                    String
  rewardToken                     String
  startTime                       BigInt
  endTime                         BigInt
  precision                       BigInt
  totalReward                     BigInt
  owner                           String

  stakingToken_owner              String?
  stakingToken_name               String
  stakingToken_symbol             String
  stakingToken_totalSupply        String
  stakingToken_decimals           Int
  stakingToken_ipfs               String?
  
  rewardToken_owner               String?
  rewardToken_name                String
  rewardToken_symbol              String
  rewardToken_totalSupply         String
  rewardToken_decimals            Int
  rewardToken_ipfs                String?
  poolIndex                       BigInt
}

model multisendTokens {
  id                              String  @id
  network                         String
  blockHeight                     Int
  sequence                        Int
  timestamp                       BigInt
  txHash                          String
  contractAddress                 String

  tokenAddress                    String
  recipients                      String
  amounts                         String
  token_owner                     String?
  token_name                      String
  token_symbol                    String
  token_totalSupply               String
  token_decimals                  Int
  token_ipfs                      String?
  from                            String
}
